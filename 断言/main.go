package main

import "fmt"

//什么是断言
// 断言是一种用于判断接口类型的机制 允许在程序中判断一个接口类型的实现 是否与预期的类型相同，以便进行相应的处理。
// 语法格式
//x.(T)     x接口类型的值    T具体类型              如果 x 的实际类型是 T     则将 x 转换为 T 类型的值并返回给我们 继续使用
// 断言的过程是通过判断x的实际类型信息和T类型信息是否一致来完成的。如果一致，断言就成功了，我们可以继续使用T类型的值；如果不一致，断言就失败了，会导致程序运行时产生一个恐慌（panic）。
// 基本格式
// x.(T)
// v := x.(T)
// v, ok := x.(T)
// 类型断言的必要条件是x是接口类型,非接口类型的x不能做类型断言

type Any interface{}

func main() {
	var x Any

	x = "你好" // 字符串型

	fmt.Println("断言", x.(int64))
}
